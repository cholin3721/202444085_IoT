앞으로 배울 것들
라즈베리파리5, 아두이노 , 각종 환경 센서, zigbee 프로그래밍, 최신 무선 네트워크 트렌드 및 서비스


라즈베리파이5

소형 컴퓨터라고 생각하면 편함, OS도 설치 가능하면서, OS가 설치됨에 따라 프로그래밍 및 서버도 운용이 가능함
당연히 키보드 마우스 등 입력장치도 연결이 가능하며, 개발도상국에 컴퓨터를 보급하기 위해 만들어졌고, OS나 보안, 교육용으로 활용


아두이노

마이크로 컨트롤러임, 이 마이크로 컨트롤러의 두뇌를 MCU(Micro Control Unit)이라고 부른다.
우리가 해야할 것은 MCU에 코딩하는 것.
MCU를 코딩해서 특정 기능을 반복하게 할 수 있다.
OS가 없어서 메모리에 저장된 하나의 프로그램만 실행이 가능하며, 펌웨어에 입력하는 값을 무한 반복한다.


둘의 차이점 

라즈베리 파이는 OS가 설치되어 입출력장치 연결 및 서버 운용이 가능하나 아두이노는 단순한 특정 기능을 반복하는데 그친다. 즉,
입출력 장치는 연결이 불가능하다.
라즈베리 파이는 디지털 신호(Binary, High and Low) 신호만 받는 것이 가능하다.
아두이노는 아날로그 데이터만 처리 가능하다.
인체감지 센서를 예로 들자면
인체를 감지하는 아날로그 신호 >> 이것을 high로 처리 >> 불을 켬 이런 원리인 것 같다.


Tiny OS 이용함, 알기로는 리눅스 기반인데 관련 지식들도 필요하지 않을까 싶음

네스씨? 이건 뭔지 잘 모르겠다.

// 아래는 gpt 답변

Tiny OS
TinyOS는 IoT 및 임베디드 시스템용 경량 OS입니다.
**리눅스 기반이 아니라 독립적인 실시간 운영체제(RTOS)**입니다.
MCU의 리소스가 제한적이기 때문에, 라즈베리 파이가 아닌 아두이노와 같은 마이크로컨트롤러 기반 장치에 적합합니다.

네스씨 (nesC)
TinyOS에서 사용하는 프로그래밍 언어로, C 언어 기반의 확장된 언어입니다.
네트워크 센서 및 임베디드 시스템을 위한 비동기 이벤트 처리 방식이 특징입니다.
일반적인 C 언어와 유사하지만, TinyOS의 특성을 살려 모듈화된 컴포넌트 기반 구조를 가집니다.

아두이노는 아날로그 데이터만 처리하는 것이 아니라 디지털과 아날로그 모두 처리할 수 있습니다.
라즈베리 파이도 아날로그 데이터 처리 가능하지만, 직접 입력은 불가하고 ADC(Analog to Digital Converter) 변환 모듈이 필요합니다.

라고 합니다.



